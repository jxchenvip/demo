{"version":3,"sources":["webpack:///11.build.js","webpack:///Audio.vue","webpack:///./src/components/Audio.vue","webpack:///./src/components/Audio.vue?5800"],"names":["webpackJsonp","39","module","exports","__webpack_require__","name","data","6","__vue_exports__","__vue_options__","__vue_template__","default","options","render","staticRenderFns","61","_vm","this","_m","_h","staticClass"],"mappings":"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","file":"11.build.js","sourcesContent":["webpackJsonp([11],{\n\n/***/ 39:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ exports[\"default\"] = {\n  name: 'audio',\n  data: function data() {\n    return {};\n  }\n};\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports, __webpack_require__) {\n\nvar __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = __webpack_require__(39)\n\n/* template */\nvar __vue_template__ = __webpack_require__(61)\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;\n  return _vm._h('div', {\n    staticClass: \"api\"\n  }, [_vm._h('h2', [\"Audio API\"]), \" \", _vm._h('div', {\n    staticClass: \"api-info\"\n  }, [_vm._h('h3', [\"Audio API\"]), \" \", _vm._h('p', [_vm._h('strong', [\"Audio API\"]), \" - specification describes a high-level JavaScript API for processing and synthesizing audio in web applications.\"])]), \" \", _vm._h('div', {\n    staticClass: \"api-info\"\n  }, [_vm._h('h3', [\"The \\\"audio\\\" tag\"])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\t<audio id=\\\"audio\\\" controls preload><source src=\\\"audio.mp3\\\" /><source src=\\\"audio.ogg\\\" /></audio> // the audio tag \\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Methods\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"play()\"]), \" \", _vm._h('td', [\"This method will play or resume the media file.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"pause()\"]), \" \", _vm._h('td', [\"This method will pause playback.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"load()\"]), \" \", _vm._h('td', [\"This method loads the media file for dynamic applications.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"canPlayType(type)\"]), \" \", _vm._h('td', [\"This method will indicate whether a file format is supported by the browser or not. It returns an empty string if the browser can’t play the media, and the strings “maybe” or “probably” based on how confident it is that it can be played.\"])])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\tvar audio = new Audio(\\\"audio.mp3\\\"); // or var audio = new Audio(); \\n\\taudio.setAttribute(\\\"src\\\", \\\"audio.mp3\\\");\\n\\n\\tvar play = document.getElementById('play');\\n\\tplay.addEventListener('click', function(){ \\n\\t   audio.play();\\n\\t}, false);\\n\\n\\tvar pause = document.getElementById('pause');\\n\\tpause.addEventListener('click', function(){ \\n\\t   audio.pause();\\n\\t}, false);\\n\\n\\taudio.volume = value; // value is float \\n\\taudio.canPlayType('audio/mp3');\\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Properties\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"paused\"]), \" \", _vm._h('td', [\"It returns true if the media is currently paused or it hasn’t started playing.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"ended\"]), \" \", _vm._h('td', [\"It returns true if the media has reached the end.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"duration\"]), \" \", _vm._h('td', [\"It returns the duration of the media in seconds.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"currentTime\"]), \" \", _vm._h('td', [\"This is a property that can return and receive a value to inform the position in which the media is being played or sets a new position to start playing.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"error\"]), \" \", _vm._h('td', [\"This returns the error value if an error has occurred.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"buffered\"]), \" \", _vm._h('td', [\"This offers information about how much the file has loaded so far into the buffer. It returns an array containing data about every portion of the media that has been downloaded.\"])])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\taudio.currentTime = 0; \\n\\tif(audio.ended){\\n\\t     // the media file has finished playing \\n\\t}\\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Events\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"progress\"]), \" \", _vm._h('td', [\"This event is fired periodically to inform of the progress downloading the media.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"canplaythrough\"]), \" \", _vm._h('td', [\"This event is fired when the entire media can be played without interruption.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"canplay\"]), \" \", _vm._h('td', [\"This event is fired when the media can be played. Unlike the previous, it’s fired when there are just a couple of frames available.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"ended\"]), \" \", _vm._h('td', [\"This event is fired when the media reaches the end.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"pause\"]), \" \", _vm._h('td', [\"This event is fired when the playback is paused.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"play\"]), \" \", _vm._h('td', [\"This event is fired when the media starts playing.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"error\"]), \" \", _vm._h('td', [\"This event is fired when an error occurs. The event is delivered to the element, if present, corresponding to the media source that produces the error.\"])])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\tvar audio = new Audio(\\\"audio.mp3\\\"); \\n\\taudio.addEventListener('play', onPlay, false);\\n\\taudio.addEventListener('ended', onEnded, false);\\n\\taudio.addEventListener('progress', onProgress, false);\\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Attributes\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"src\"]), \" \", _vm._h('td', [\"the path of the file to be played.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"controls\"]), \" \", _vm._h('td', [\"This activates the interface provided by default for every browser.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"autoplay\"]), \" \", _vm._h('td', [\"When this attribute is present, the browser will automatically play the audio as soon as it can.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"loop\"]), \" \", _vm._h('td', [\"If this attribute is specified, the browser will restart the audio upon reaching the end.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"preload\"]), \" \", _vm._h('td', [\"This attribute can take three values: none, metadata or auto. The first one indicates that the audio shouldn’t be cached, usually with the goal of minimizing unnecessary traffic. The second value, metadata, will recommend the browser to fetch some information about the resource (for example, duration). The third value, auto, is the value set by default and it prompts the browser to download the file as soon as possible.\"])])])])\n}]}\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 11.build.js","<template>\n  <div class=\"api\">\n  \t<h2>Audio API</h2>\n  \t<div class=\"api-info\">\n  \t\t<h3>Audio API</h3>\n  \t\t<p><strong>Audio API</strong> - specification describes a high-level JavaScript API for processing and synthesizing audio in web applications.</p>\n  \t</div>\n\t\n\t<div class=\"api-info\">\n\t\t<h3>The \"audio\" tag</h3>\n\t</div>\n\t<pre class=\"api-code\">\n\t&lt;audio id=\"audio\" controls preload&gt;&lt;source src=\"audio.mp3\" /&gt;&lt;source src=\"audio.ogg\" /&gt;&lt;/audio&gt; // the audio tag \n\t</pre>\n\t<h4 class=\"api-table-caption\">The Methods</h4>\n\t<table class=\"api-table\">\n\t\t<tr>\n\t\t\t<td>play()</td>\n\t\t\t<td>This method will play or resume the media file.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pause()</td>\n\t\t\t<td>This method will pause playback.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>load()</td>\n\t\t\t<td>This method loads the media file for dynamic applications.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>canPlayType(type)</td>\n\t\t\t<td>This method will indicate whether a file format is supported by the browser or not. It returns an empty string if the browser can’t play the media, and the strings “maybe” or “probably” based on how confident it is that it can be played.</td>\n\t\t</tr>\n\t</table>\n\n\t<pre class=\"api-code\">\n\tvar audio = new Audio(\"audio.mp3\"); // or var audio = new Audio(); \n\taudio.setAttribute(\"src\", \"audio.mp3\");\n\n\tvar play = document.getElementById('play');\n\tplay.addEventListener('click', function(){ \n\t   audio.play();\n\t}, false);\n\n\tvar pause = document.getElementById('pause');\n\tpause.addEventListener('click', function(){ \n\t   audio.pause();\n\t}, false);\n\n\taudio.volume = value; // value is float \n\taudio.canPlayType('audio/mp3');\n\t</pre>\n\t<h4 class=\"api-table-caption\">The Properties</h4>\n\t<table class=\"api-table\">\n\t\t<tr>\n\t\t\t<td>paused</td>\n\t\t\t<td>It returns true if the media is currently paused or it hasn’t started playing.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>ended</td>\n\t\t\t<td>It returns true if the media has reached the end.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>duration</td>\n\t\t\t<td>It returns the duration of the media in seconds.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>currentTime</td>\n\t\t\t<td>This is a property that can return and receive a value to inform the position in which the media is being played or sets a new position to start playing.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>error</td>\n\t\t\t<td>This returns the error value if an error has occurred.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>buffered</td>\n\t\t\t<td>This offers information about how much the file has loaded so far into the buffer. It returns an array containing data about every portion of the media that has been downloaded.</td>\n\t\t</tr>\n\t</table>\n\n\t<pre class=\"api-code\">\n\taudio.currentTime = 0; \n\tif(audio.ended){\n\t     // the media file has finished playing \n\t}\n\t</pre>\n\t\n\t<h4 class=\"api-table-caption\">The Events</h4>\n\t<table class=\"api-table\">\n\t\t<tr>\n\t\t\t<td>progress</td>\n\t\t\t<td>This event is fired periodically to inform of the progress downloading the media.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>canplaythrough</td>\n\t\t\t<td>This event is fired when the entire media can be played without interruption.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>canplay</td>\n\t\t\t<td>This event is fired when the media can be played. Unlike the previous, it’s fired when there are just a couple of frames available.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>ended</td>\n\t\t\t<td>This event is fired when the media reaches the end.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pause</td>\n\t\t\t<td>This event is fired when the playback is paused.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>play</td>\n\t\t\t<td>This event is fired when the media starts playing.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>error</td>\n\t\t\t<td>This event is fired when an error occurs. The event is delivered to the element, if present, corresponding to the media source that produces the error.</td>\n\t\t</tr>\n\t</table>\n\t\n\t<pre class=\"api-code\">\n\tvar audio = new Audio(\"audio.mp3\"); \n\taudio.addEventListener('play', onPlay, false);\n\taudio.addEventListener('ended', onEnded, false);\n\taudio.addEventListener('progress', onProgress, false);\n\t</pre>\n\t<h4 class=\"api-table-caption\">The Attributes</h4>\n\t<table class=\"api-table\">\n\t\t<tr>\n\t\t\t<td>src</td>\n\t\t\t<td>the path of the file to be played.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>controls</td>\n\t\t\t<td>This activates the interface provided by default for every browser.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>autoplay</td>\n\t\t\t<td>When this attribute is present, the browser will automatically play the audio as soon as it can.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>loop</td>\n\t\t\t<td>If this attribute is specified, the browser will restart the audio upon reaching the end.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>preload</td>\n\t\t\t<td>This attribute can take three values: none, metadata or auto. The first one indicates that the audio shouldn’t be cached, usually with the goal of minimizing unnecessary traffic. The second value, metadata, will recommend the browser to fetch some information about the resource (for example, duration). The third value, auto, is the value set by default and it prompts the browser to download the file as soon as possible.</td>\n\t\t</tr>\n\t</table>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'audio',\n  data () {\n  \treturn {}\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// Audio.vue?7047c8c8","var __vue_exports__, __vue_options__\nvar __vue_styles__ = {}\n\n/* script */\n__vue_exports__ = require(\"!!babel-loader!vue-loader/lib/selector?type=script&index=0!./Audio.vue\")\n\n/* template */\nvar __vue_template__ = require(\"!!vue-loader/lib/template-compiler?id=data-v-b0f64908!vue-loader/lib/selector?type=template&index=0!./Audio.vue\")\n__vue_options__ = __vue_exports__ = __vue_exports__ || {}\nif (\n  typeof __vue_exports__.default === \"object\" ||\n  typeof __vue_exports__.default === \"function\"\n) {\n__vue_options__ = __vue_exports__ = __vue_exports__.default\n}\nif (typeof __vue_options__ === \"function\") {\n  __vue_options__ = __vue_options__.options\n}\n\n__vue_options__.render = __vue_template__.render\n__vue_options__.staticRenderFns = __vue_template__.staticRenderFns\n\nmodule.exports = __vue_exports__\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Audio.vue\n// module id = 6\n// module chunks = 11","module.exports={render:function (){var _vm=this;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;\n  return _vm._h('div', {\n    staticClass: \"api\"\n  }, [_vm._h('h2', [\"Audio API\"]), \" \", _vm._h('div', {\n    staticClass: \"api-info\"\n  }, [_vm._h('h3', [\"Audio API\"]), \" \", _vm._h('p', [_vm._h('strong', [\"Audio API\"]), \" - specification describes a high-level JavaScript API for processing and synthesizing audio in web applications.\"])]), \" \", _vm._h('div', {\n    staticClass: \"api-info\"\n  }, [_vm._h('h3', [\"The \\\"audio\\\" tag\"])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\t<audio id=\\\"audio\\\" controls preload><source src=\\\"audio.mp3\\\" /><source src=\\\"audio.ogg\\\" /></audio> // the audio tag \\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Methods\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"play()\"]), \" \", _vm._h('td', [\"This method will play or resume the media file.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"pause()\"]), \" \", _vm._h('td', [\"This method will pause playback.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"load()\"]), \" \", _vm._h('td', [\"This method loads the media file for dynamic applications.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"canPlayType(type)\"]), \" \", _vm._h('td', [\"This method will indicate whether a file format is supported by the browser or not. It returns an empty string if the browser can’t play the media, and the strings “maybe” or “probably” based on how confident it is that it can be played.\"])])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\tvar audio = new Audio(\\\"audio.mp3\\\"); // or var audio = new Audio(); \\n\\taudio.setAttribute(\\\"src\\\", \\\"audio.mp3\\\");\\n\\n\\tvar play = document.getElementById('play');\\n\\tplay.addEventListener('click', function(){ \\n\\t   audio.play();\\n\\t}, false);\\n\\n\\tvar pause = document.getElementById('pause');\\n\\tpause.addEventListener('click', function(){ \\n\\t   audio.pause();\\n\\t}, false);\\n\\n\\taudio.volume = value; // value is float \\n\\taudio.canPlayType('audio/mp3');\\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Properties\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"paused\"]), \" \", _vm._h('td', [\"It returns true if the media is currently paused or it hasn’t started playing.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"ended\"]), \" \", _vm._h('td', [\"It returns true if the media has reached the end.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"duration\"]), \" \", _vm._h('td', [\"It returns the duration of the media in seconds.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"currentTime\"]), \" \", _vm._h('td', [\"This is a property that can return and receive a value to inform the position in which the media is being played or sets a new position to start playing.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"error\"]), \" \", _vm._h('td', [\"This returns the error value if an error has occurred.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"buffered\"]), \" \", _vm._h('td', [\"This offers information about how much the file has loaded so far into the buffer. It returns an array containing data about every portion of the media that has been downloaded.\"])])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\taudio.currentTime = 0; \\n\\tif(audio.ended){\\n\\t     // the media file has finished playing \\n\\t}\\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Events\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"progress\"]), \" \", _vm._h('td', [\"This event is fired periodically to inform of the progress downloading the media.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"canplaythrough\"]), \" \", _vm._h('td', [\"This event is fired when the entire media can be played without interruption.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"canplay\"]), \" \", _vm._h('td', [\"This event is fired when the media can be played. Unlike the previous, it’s fired when there are just a couple of frames available.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"ended\"]), \" \", _vm._h('td', [\"This event is fired when the media reaches the end.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"pause\"]), \" \", _vm._h('td', [\"This event is fired when the playback is paused.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"play\"]), \" \", _vm._h('td', [\"This event is fired when the media starts playing.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"error\"]), \" \", _vm._h('td', [\"This event is fired when an error occurs. The event is delivered to the element, if present, corresponding to the media source that produces the error.\"])])]), \" \", _vm._h('pre', {\n    staticClass: \"api-code\"\n  }, [\"\\n\\tvar audio = new Audio(\\\"audio.mp3\\\"); \\n\\taudio.addEventListener('play', onPlay, false);\\n\\taudio.addEventListener('ended', onEnded, false);\\n\\taudio.addEventListener('progress', onProgress, false);\\n\\t\"]), \" \", _vm._h('h4', {\n    staticClass: \"api-table-caption\"\n  }, [\"The Attributes\"]), \" \", _vm._h('table', {\n    staticClass: \"api-table\"\n  }, [_vm._h('tr', [_vm._h('td', [\"src\"]), \" \", _vm._h('td', [\"the path of the file to be played.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"controls\"]), \" \", _vm._h('td', [\"This activates the interface provided by default for every browser.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"autoplay\"]), \" \", _vm._h('td', [\"When this attribute is present, the browser will automatically play the audio as soon as it can.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"loop\"]), \" \", _vm._h('td', [\"If this attribute is specified, the browser will restart the audio upon reaching the end.\"])]), \" \", _vm._h('tr', [_vm._h('td', [\"preload\"]), \" \", _vm._h('td', [\"This attribute can take three values: none, metadata or auto. The first one indicates that the audio shouldn’t be cached, usually with the goal of minimizing unnecessary traffic. The second value, metadata, will recommend the browser to fetch some information about the resource (for example, duration). The third value, auto, is the value set by default and it prompts the browser to download the file as soon as possible.\"])])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-b0f64908!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Audio.vue\n// module id = 61\n// module chunks = 11"],"sourceRoot":""}